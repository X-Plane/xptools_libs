Common subdirectories: libgeotiff-1.4.2_orig/bin and libgeotiff-1.4.2/bin
Common subdirectories: libgeotiff-1.4.2_orig/cmake and libgeotiff-1.4.2/cmake
diff -Nu libgeotiff-1.4.2_orig/cpl_csv_incode.c libgeotiff-1.4.2/cpl_csv_incode.c
--- libgeotiff-1.4.2_orig/cpl_csv_incode.c	1969-12-31 16:00:00.000000000 -0800
+++ libgeotiff-1.4.2/cpl_csv_incode.c	2017-11-08 16:42:31.264306828 -0800
@@ -0,0 +1,205 @@
+/**********************************************************************
+ * $Id$
+ *
+ * Name:     cpl_struct.c
+ * Project:  libgeotiff
+ * Purpose:  Provide "CSV API" interface to in-code EPSG CSV tables.
+ * Author:   Derrick J Brashear <shadow@dementia.org>
+ *
+ ******************************************************************************
+ * Copyright (c) 1999, Frank Warmerdam
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included
+ * in all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+ * DEALINGS IN THE SOFTWARE.
+ *****************************************************************************/
+
+#include "cpl_serv.h"
+
+#include "geo_incode_defs.h"
+
+/* This header is autogenerated by cmake and defines pointers to the
+   incode_epsg structures that were generated from EPSG CSV files */
+
+extern const datafile_rows_t *pcs_rows[];
+extern const datafile_rows_t *gcs_rows[];
+extern const datafile_rows_t *ellipsoid_rows[];
+extern const datafile_rows_t *prime_meridian_rows[];
+extern const datafile_rows_t *datum_rows[];
+extern const datafile_rows_t *unit_of_measure_rows[];
+extern const datafile_rows_t *projop_wparm_rows[];
+
+
+/* Pointers to data */
+static const datafile_t files[] = {
+  { "pcs", pcs_rows },
+  { "gcs", gcs_rows },
+  { "ellipsoid", ellipsoid_rows },
+  { "prime_meridian", prime_meridian_rows },
+  { "datum", datum_rows },
+  { "unit_of_measure", unit_of_measure_rows },
+  { "projop_wparm", projop_wparm_rows },
+  { NULL, NULL }
+};
+
+#if 0
+main()
+{
+  datafile_t *csvfile;
+  char **papszRecord;
+  int i, row, col;
+
+  papszRecord = CSVScanFileByName( "horiz_cs.csv", "HORIZCS_CODE",
+				   "2200", CC_Integer );
+
+  printf ("%s %s\n", papszRecord[0], papszRecord[1]);
+  csvfile = &files[0];
+  while (csvfile->name != NULL) {
+    printf("file name is %s\n", csvfile->name);
+    for (i = 0; csvfile->cols[i]; i++) {
+      printf("column name is %s\n", csvfile->cols[i]);
+      row = 1; col = 0;
+      if (csvfile->rows[row] && csvfile->rows[row][col])
+	printf("value %d,%d is %s\n", row, col, csvfile->rows[row][col]);
+    }
+    csvfile++;
+  }
+}
+#endif
+
+const char * CSVFilename( const char *pszBasename )
+{
+  return pszBasename;
+}
+
+static int CSVCompare( const char * pszFieldValue, const char * pszTarget,
+                       CSVCompareCriteria eCriteria )
+{
+    if( eCriteria == CC_ExactString )
+    {
+        return( !EQUAL( pszFieldValue, pszTarget ) == 0 );
+    }
+    else if( eCriteria == CC_ApproxString )
+    {
+        return( !EQUAL( pszFieldValue, pszTarget ) );
+    }
+    else if( eCriteria == CC_Integer )
+    {
+        return( atoi(pszFieldValue) == atoi(pszTarget) );
+    }
+    return FALSE;
+}
+
+void CSVDeaccess( const char *pszFilename )
+{
+}
+
+static int __CSVGetFileId( const char * pszFilename)
+{
+  datafile_t *csvfile;
+  int i = 0;
+
+  csvfile = (datafile_t *)&files[i];
+  for (i = 0; csvfile->name; i++, csvfile = (datafile_t *)&files[i])
+  {
+    if (!strncmp(csvfile->name,pszFilename,(strlen(pszFilename)-4)))
+      return i;
+  }
+
+  return -1;
+}
+
+char **CSVScanFileByName( const char * pszFilename,
+                          const char * pszKeyFieldName,
+                          const char * pszValue, 
+                          CSVCompareCriteria eCriteria )
+{
+  datafile_t *csvfile;
+  int row, col, iFile;
+
+  iFile = __CSVGetFileId(pszFilename);
+  if( iFile == -1 )
+      return NULL;
+
+  col = CSVGetFileFieldId(pszFilename, pszKeyFieldName);
+
+  csvfile = (datafile_t *)&files[iFile];
+  for (row = 1; ((csvfile->rows[row] != 0) && (csvfile->rows[row][col] != 0));
+       row++) {
+    if (CSVCompare(csvfile->rows[row][col], pszValue, eCriteria))
+      return ((char **)csvfile->rows[row]);
+  }
+
+  return NULL;
+}
+
+int CSVGetFileFieldId( const char * pszFilename, const char * pszFieldName)
+{
+    datafile_t *csvfile;
+    int i, iFile;
+
+    iFile = __CSVGetFileId(pszFilename);
+    if( iFile == -1 )
+        return -1;
+
+    csvfile = (datafile_t *)&files[iFile];
+    if (!strncmp(csvfile->name,pszFilename,(strlen(pszFilename)-4)))
+    {
+        for (i = 0; csvfile->rows[0][i]; i++) 
+            if (EQUAL(pszFieldName, csvfile->rows[0][i]))
+                return i;
+    }
+
+    return -1;
+}
+
+const char *CSVGetField( const char * pszFilename,
+                         const char * pszKeyFieldName,
+                         const char * pszKeyFieldValue,
+                         CSVCompareCriteria eCriteria,
+                         const char * pszTargetField )
+{
+  char **papszRecord;
+  int  iField;
+
+  papszRecord = CSVScanFileByName( pszFilename, pszKeyFieldName,
+				   pszKeyFieldValue, CC_Integer );
+
+  if( papszRecord == NULL )
+      return "";
+
+  iField = CSVGetFileFieldId(pszFilename, pszTargetField);
+
+  if( iField == -1 )
+      return "";
+  else
+      return (papszRecord[iField]);
+}
+
+/* Dummy function */
+void SetCSVFilenameHook( const char *(*pfnNewHook)( const char * ) )
+
+{
+}
+
+/* dummy function */
+
+char **CSVReadParseLine( FILE * fp )
+
+{
+    return NULL;
+}
Common subdirectories: libgeotiff-1.4.2_orig/csv and libgeotiff-1.4.2/csv
Common subdirectories: libgeotiff-1.4.2_orig/docs and libgeotiff-1.4.2/docs
Common subdirectories: libgeotiff-1.4.2_orig/libxtiff and libgeotiff-1.4.2/libxtiff
Common subdirectories: libgeotiff-1.4.2_orig/m4 and libgeotiff-1.4.2/m4
diff -Nu libgeotiff-1.4.2_orig/Makefile.in libgeotiff-1.4.2/Makefile.in
--- libgeotiff-1.4.2_orig/Makefile.in	2016-08-18 11:52:27.000000000 -0700
+++ libgeotiff-1.4.2/Makefile.in	2017-11-08 16:47:25.304052393 -0800
@@ -124,7 +124,9 @@
 @CSV_IS_CONFIG_TRUE@                             csv/pcs.c \
 @CSV_IS_CONFIG_TRUE@                             csv/prime_meridian.c \
 @CSV_IS_CONFIG_TRUE@                             csv/projop_wparm.c \
-@CSV_IS_CONFIG_TRUE@                             csv/unit_of_measure.c
+@CSV_IS_CONFIG_TRUE@                             csv/unit_of_measure.c \
+@CSV_IS_CONFIG_TRUE@                             cpl_csv_incode.c
+
 
 subdir = .
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
@@ -176,13 +178,14 @@
 	geo_print.c geo_set.c geo_simpletags.c geo_tiffp.c geo_trans.c \
 	geo_write.c geo_strtod.c geotiff_proj4.c csv/datum.c \
 	csv/ellipsoid.c csv/gcs.c csv/pcs.c csv/prime_meridian.c \
-	csv/projop_wparm.c csv/unit_of_measure.c
+	csv/projop_wparm.c csv/unit_of_measure.c cpl_csv_incode.c
 am__dirstamp = $(am__leading_dot)dirstamp
 @CSV_IS_CONFIG_TRUE@am__objects_1 = csv/datum.lo csv/ellipsoid.lo \
 @CSV_IS_CONFIG_TRUE@	csv/gcs.lo csv/pcs.lo \
 @CSV_IS_CONFIG_TRUE@	csv/prime_meridian.lo csv/projop_wparm.lo \
-@CSV_IS_CONFIG_TRUE@	csv/unit_of_measure.lo
-am_libgeotiff_la_OBJECTS = cpl_serv.lo cpl_csv.lo geo_extra.lo \
+@CSV_IS_CONFIG_TRUE@	csv/unit_of_measure.lo cpl_csv_incode.lo
+@CSV_IS_CONFIG_FALSE@am__objects_1 = cpl_csv.lo
+am_libgeotiff_la_OBJECTS = cpl_serv.lo geo_extra.lo \
 	geo_free.lo geo_get.lo geo_names.lo geo_new.lo \
 	geo_normalize.lo geo_print.lo geo_set.lo geo_simpletags.lo \
 	geo_tiffp.lo geo_trans.lo geo_write.lo geo_strtod.lo \
@@ -694,6 +697,27 @@
 csv/unit_of_measure.lo: csv/$(am__dirstamp) \
 	csv/$(DEPDIR)/$(am__dirstamp)
 
+csv/datum.c: csv/datum.csv
+	csv/csv2c.py $< $@
+
+csv/ellipsoid.c: csv/ellipsoid.csv
+	csv/csv2c.py $< $@
+
+csv/gcs.c: csv/gcs.csv
+	csv/csv2c.py $< $@
+
+csv/pcs.c: csv/pcs.csv
+	csv/csv2c.py $< $@
+
+csv/prime_meridian.c: csv/prime_meridian.csv
+	csv/csv2c.py $< $@
+
+csv/projop_wparm.c: csv/projop_wparm.csv
+	csv/csv2c.py $< $@
+
+csv/unit_of_measure.c: csv/unit_of_measure.csv
+	csv/csv2c.py $< $@
+
 libgeotiff.la: $(libgeotiff_la_OBJECTS) $(libgeotiff_la_DEPENDENCIES) $(EXTRA_libgeotiff_la_DEPENDENCIES) 
 	$(AM_V_CCLD)$(libgeotiff_la_LINK) -rpath $(libdir) $(libgeotiff_la_OBJECTS) $(libgeotiff_la_LIBADD) $(LIBS)
 
@@ -706,6 +730,7 @@
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpl_csv.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpl_csv_incode.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpl_serv.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/geo_extra.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/geo_free.Plo@am__quote@
Common subdirectories: libgeotiff-1.4.2_orig/man and libgeotiff-1.4.2/man
